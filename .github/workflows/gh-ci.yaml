name: GH Actions CI
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master

defaults:
  run:
    shell: bash -l {0}

jobs:
  main_tests:
    if: "github.repository == 'lilyminium/psiresp'"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        python-version: [3.7, 3.8, 3.9]
        codecov: [true]
    env:
      CYTHON_TRACE_NOGIL: 1
      MPLBACKEND: agg
      GH_OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: setup_osx
        if: startsWith(matrix.os, 'macOS')
        run: |
          # Set OS specific vars and compiler flags
          echo "OS_NAME=osx" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=10.9" >> $GITHUB_ENV
          ulimit -S -n 2048

      - name: setup_linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          # Set OS specific vars and compiler flags
          echo "OS_NAME=linux" >> $GITHUB_ENV
          gcc -v
          echo "CC=gcc" >> $GITHUB_ENV
          g++ -v
          echo "CXX=g++" >> $GITHUB_ENV
          gfortran -v
          echo "FC=gfortran" >> $GITHUB_ENV

      - name: setup_miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          # channel-priority: flexible
          # channels: defaults, conda-forge
          add-pip-as-python-dependency: true
          mamba-version: "*"
          architecture: x64
          environment-file: devtools/conda-envs/test_env.yaml
          activate-environment: test

      - name: check_setup
        run: |
          # Check OS and python setup
          echo "OS: ${OS_NAME}"
          which python
          conda list

      - name: install_psiresp
        run: python setup.py install

      - name: run_tests
        run: |
          PYTEST_FLAGS=" --disable-pytest-warnings --durations=50 --cov=psiresp --cov-report=xml"
          pytest -n 4 psiresp/tests $PYTEST_FLAGS
        
      - name: codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.xml
          fail_ci_if_error: True
          verbose: True

  # TODO: the miniconda build for this is reaaaaally slow
  build_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: setup_miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          channel-priority: flexible
          add-pip-as-python-dependency: true
          mamba-version: "*"
          architecture: x64
          environment-file: devtools/conda-envs/docs_env.yaml
          activate-environment: psiresp-docs

      - name: install_psiresp
        run: python setup.py install
      
      - name: build_docs
        run: |
          python setup.py build_ext



